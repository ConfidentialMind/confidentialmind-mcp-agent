============================= test session starts ==============================
platform darwin -- Python 3.10.16, pytest-8.3.5, pluggy-1.5.0
rootdir: /Users/edkim/dev/confidentialmind-mcp-agent
configfile: pytest.ini
plugins: anyio-4.9.0, langsmith-0.3.42, asyncio-0.26.0
asyncio: mode=auto, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 15 items

tests/mcp/postgres/test_server.py FEFEFEFE.E.E.E.E.E.E.E.E.E.EFE         [100%]

==================================== ERRORS ====================================
________________ ERROR at teardown of test_get_schemas_resource ________________
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1061c5d50>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
---------------------------- Captured stdout setup -----------------------------
Test table 'mcp_test_table' created and populated in 'test_db'.
----------------------------- Captured stderr call -----------------------------
[05/06/25 17:04:38] ERROR    Error reading resource                server.py:486
                             postgres://schemas: Error reading                  
                             resource postgres://schemas: Could                 
                             not retrieve database schemas: pool                
                             is closing                                         
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:85 Error fetching table schemas: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 54, in get_table_schemas
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:57 Failed to get schemas: pool is closing
ERROR    FastMCP.fastmcp.server.server:server.py:486 Error reading resource postgres://schemas: Error reading resource postgres://schemas: Could not retrieve database schemas: pool is closing
_____________ ERROR at teardown of test_execute_sql_select_success _____________
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x106339cc0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
___________ ERROR at teardown of test_execute_sql_select_with_clause ___________
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1064ab520>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
_____________ ERROR at teardown of test_execute_sql_explain_query ______________
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1063d7fa0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
_ ERROR at teardown of test_execute_sql_disallowed_keywords[INSERT INTO mcp_test_table (name, value) VALUES ('delta', 40);] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1063d83a0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[UPDATE mcp_test_table SET value = 25 WHERE name = 'beta';] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1064a8760>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[DELETE FROM mcp_test_table WHERE name = 'alpha';] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1062e7550>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[CREATE TABLE another_table (col1 TEXT);] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x10633bbe0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[DROP TABLE mcp_test_table;] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x106557a30>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[ALTER TABLE mcp_test_table ADD COLUMN new_col TEXT;] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x10621a6e0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_disallowed_keywords[SELECT id FROM mcp_test_table; DROP TABLE mcp_test_table;] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x106527310>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query contains disallowed keywords (potential write operation).
_ ERROR at teardown of test_execute_sql_disallowed_keywords[WITH sneaky AS (DELETE FROM mcp_test_table WHERE id = 1) SELECT 1;] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x106536200>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query contains disallowed keywords (potential write operation).
_ ERROR at teardown of test_execute_sql_invalid_start[ ALTER TABLE mcp_test_table RENAME COLUMN value TO amount;] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1064872b0>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
_ ERROR at teardown of test_execute_sql_invalid_start[COMMENT ON TABLE mcp_test_table IS 'Test table.';] _
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x106531540>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
WARNING  src.tools.postgres_mcp.server:server.py:91 SQL query validation failed: Query must start with SELECT, WITH, or EXPLAIN.
______________ ERROR at teardown of test_execute_sql_syntax_error ______________
  + Exception Group Traceback (most recent call last):
  |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/exceptiongroup/_catch.py", line 63, in handle_exception
  |     raise matched
  | exceptiongroup.ExceptionGroup:  (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 341, in from_call
    |     result: TResult | None = func()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 242, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_hooks.py", line 513, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     raise exception.with_traceback(exception.__traceback__)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 97, in pytest_runtest_teardown
    |     yield from thread_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/threadexception.py", line 68, in thread_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 100, in pytest_runtest_teardown
    |     yield from unraisable_exception_runtest_hook()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py", line 70, in unraisable_exception_runtest_hook
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 853, in pytest_runtest_teardown
    |     yield from self._runtest_for(item, "teardown")
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/logging.py", line 829, in _runtest_for
    |     yield
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 122, in _multicall
    |     teardown.throw(exception)  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/capture.py", line 903, in pytest_runtest_teardown
    |     return (yield)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pluggy/_callers.py", line 103, in _multicall
    |     res = hook_impl.function(*args)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 189, in pytest_runtest_teardown
    |     item.session._setupstate.teardown_exact(nextitem)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 557, in teardown_exact
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/runner.py", line 546, in teardown_exact
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1032, in finish
    |     raise exceptions[0]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/_pytest/fixtures.py", line 1021, in finish
    |     fin()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 363, in finalizer
    |     event_loop.run_until_complete(task)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    |     return future.result()
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py", line 354, in async_finalizer
    |     await gen_obj.__anext__()  # type: ignore[union-attr]
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/tests/mcp/postgres/test_server.py", line 87, in mcp_client
    |     async with Client(server) as client:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/client.py", line 105, in __aexit__
    |     await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/fastmcp/client/transports.py", line 406, in connect_session
    |     async with create_connected_server_and_client_session(
    |   File "/Users/edkim/.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py", line 206, in __aexit__
    |     await anext(self.gen)
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/mcp/shared/memory.py", line 81, in create_connected_server_and_client_session
    |     async with anyio.create_task_group() as tg:
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 778, in __aexit__
    |     if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
    |   File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 457, in __exit__
    |     raise RuntimeError(
    | RuntimeError: Attempted to exit cancel scope in a different task than it was entered in
    +------------------------------------

During handling of the above exception, another exception occurred:

server = FastMCP('Postgres Reader MCP')

    @pytest.fixture
    async def mcp_client(server: FastMCP) -> Client:
        """Provides an in-memory FastMCP client connected to the server."""
        # Client uses the server instance directly for in-memory testing
>       async with Client(server) as client:

tests/mcp/postgres/test_server.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:105: in __aexit__
    await self._session_cm.__aexit__(exc_type, exc_val, exc_tb)
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/fastmcp/client/transports.py:406: in connect_session
    async with create_connected_server_and_client_session(
../../.local/share/uv/python/cpython-3.10.16-macos-aarch64-none/lib/python3.10/contextlib.py:206: in __aexit__
    await anext(self.gen)
.venv/lib/python3.10/site-packages/mcp/shared/memory.py:81: in create_connected_server_and_client_session
    async with anyio.create_task_group() as tg:
.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:778: in __aexit__
    if self.cancel_scope.__exit__(type(exc), exc, exc.__traceback__):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <anyio._backends._asyncio.CancelScope object at 0x1063d7e20>
exc_type = <class 'exceptiongroup.ExceptionGroup'>
exc_val = ExceptionGroup('unhandled errors in a TaskGroup', [RuntimeError('Attempted to exit cancel scope in a different task than it was entered in')])

    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        exc_tb: TracebackType | None,
    ) -> bool:
        del exc_tb
    
        if not self._active:
            raise RuntimeError("This cancel scope is not active")
        if current_task() is not self._host_task:
>           raise RuntimeError(
                "Attempted to exit cancel scope in a different task than it was "
                "entered in"
            )
E           RuntimeError: Attempted to exit cancel scope in a different task than it was entered in

.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py:457: RuntimeError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
--------------------------- Captured stdout teardown ---------------------------
Test table 'mcp_test_table' dropped from 'test_db'.
=================================== FAILURES ===================================
__________________________ test_get_schemas_resource ___________________________

mcp_client = <fastmcp.client.client.Client object at 0x1061c56c0>

    @pytest.mark.asyncio
    async def test_get_schemas_resource(mcp_client: Client):
        """
        Tests the postgres://schemas resource.
        Verifies that the test table schema is returned.
        """
        try:
>           result = await mcp_client.read_resource("postgres://schemas")

tests/mcp/postgres/test_server.py:101: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:225: in read_resource
    result = await self.read_resource_mcp(uri)
.venv/lib/python3.10/site-packages/fastmcp/client/client.py:205: in read_resource_mcp
    result = await self.session.read_resource(uri)
.venv/lib/python3.10/site-packages/mcp/client/session.py:222: in read_resource
    return await self.send_request(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <mcp.client.session.ClientSession object at 0x1061c6ec0>
request = ClientRequest(root=ReadResourceRequest(method='resources/read', params=ReadResourceRequestParams(meta=None, uri=AnyUrl('postgres://schemas'))))
result_type = <class 'mcp.types.ReadResourceResult'>
request_read_timeout_seconds = None

    async def send_request(
        self,
        request: SendRequestT,
        result_type: type[ReceiveResultT],
        request_read_timeout_seconds: timedelta | None = None,
    ) -> ReceiveResultT:
        """
        Sends a request and wait for a response. Raises an McpError if the
        response contains an error. If a request read timeout is provided, it
        will take precedence over the session read timeout.
    
        Do not use this method to emit notifications! Use send_notification()
        instead.
        """
    
        request_id = self._request_id
        self._request_id = request_id + 1
    
        response_stream, response_stream_reader = anyio.create_memory_object_stream[
            JSONRPCResponse | JSONRPCError
        ](1)
        self._response_streams[request_id] = response_stream
    
        try:
            jsonrpc_request = JSONRPCRequest(
                jsonrpc="2.0",
                id=request_id,
                **request.model_dump(by_alias=True, mode="json", exclude_none=True),
            )
    
            # TODO: Support progress callbacks
    
            await self._write_stream.send(JSONRPCMessage(jsonrpc_request))
    
            # request read timeout takes precedence over session read timeout
            timeout = None
            if request_read_timeout_seconds is not None:
                timeout = request_read_timeout_seconds.total_seconds()
            elif self._session_read_timeout_seconds is not None:
                timeout = self._session_read_timeout_seconds.total_seconds()
    
            try:
                with anyio.fail_after(timeout):
                    response_or_error = await response_stream_reader.receive()
            except TimeoutError:
                raise McpError(
                    ErrorData(
                        code=httpx.codes.REQUEST_TIMEOUT,
                        message=(
                            f"Timed out while waiting for response to "
                            f"{request.__class__.__name__}. Waited "
                            f"{timeout} seconds."
                        ),
                    )
                )
    
            if isinstance(response_or_error, JSONRPCError):
>               raise McpError(response_or_error.error)
E               mcp.shared.exceptions.McpError: Error reading resource postgres://schemas: Could not retrieve database schemas: pool is closing

.venv/lib/python3.10/site-packages/mcp/shared/session.py:268: McpError
---------------------------- Captured stdout setup -----------------------------
Test table 'mcp_test_table' created and populated in 'test_db'.
----------------------------- Captured stderr call -----------------------------
[05/06/25 17:04:38] ERROR    Error reading resource                server.py:486
                             postgres://schemas: Error reading                  
                             resource postgres://schemas: Could                 
                             not retrieve database schemas: pool                
                             is closing                                         
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:85 Error fetching table schemas: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 54, in get_table_schemas
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:57 Failed to get schemas: pool is closing
ERROR    FastMCP.fastmcp.server.server:server.py:486 Error reading resource postgres://schemas: Error reading resource postgres://schemas: Could not retrieve database schemas: pool is closing
_______________________ test_execute_sql_select_success ________________________

mcp_client = <fastmcp.client.client.Client object at 0x10633b160>

    @pytest.mark.asyncio
    async def test_execute_sql_select_success(mcp_client: Client):
        """Tests executing a valid SELECT query via the execute_sql tool."""
        sql = "SELECT id, name, value FROM mcp_test_table ORDER BY id;"
        try:
>           result = await mcp_client.call_tool("execute_sql", {"sql_query": sql})

tests/mcp/postgres/test_server.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <fastmcp.client.client.Client object at 0x10633b160>
name = 'execute_sql'
arguments = {'sql_query': 'SELECT id, name, value FROM mcp_test_table ORDER BY id;'}

    async def call_tool(
        self,
        name: str,
        arguments: dict[str, Any] | None = None,
    ) -> list[
        mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource
    ]:
        """Call a tool on the server.
    
        Unlike call_tool_mcp, this method raises a ClientError if the tool call results in an error.
    
        Args:
            name (str): The name of the tool to call.
            arguments (dict[str, Any] | None, optional): Arguments to pass to the tool. Defaults to None.
    
        Returns:
            list[mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource]:
                The content returned by the tool.
    
        Raises:
            ClientError: If the tool call results in an error.
            RuntimeError: If called while the client is not connected.
        """
        result = await self.call_tool_mcp(name=name, arguments=arguments or {})
        if result.isError:
            msg = cast(mcp.types.TextContent, result.content[0]).text
>           raise ClientError(msg)
E           fastmcp.exceptions.ClientError: Error executing tool execute_sql: Could not execute SQL query: pool is closing

.venv/lib/python3.10/site-packages/fastmcp/client/client.py:426: ClientError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
_____________________ test_execute_sql_select_with_clause ______________________

mcp_client = <fastmcp.client.client.Client object at 0x1064ab790>

    @pytest.mark.asyncio
    async def test_execute_sql_select_with_clause(mcp_client: Client):
        """Tests executing a valid query starting with WITH."""
        sql = """
        WITH filtered_data AS (
            SELECT id, name, value FROM mcp_test_table WHERE value > 15
        )
        SELECT * FROM filtered_data ORDER BY value;
        """
        try:
>           result = await mcp_client.call_tool("execute_sql", {"sql_query": sql})

tests/mcp/postgres/test_server.py:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <fastmcp.client.client.Client object at 0x1064ab790>
name = 'execute_sql'
arguments = {'sql_query': '\n    WITH filtered_data AS (\n        SELECT id, name, value FROM mcp_test_table WHERE value > 15\n    )\n    SELECT * FROM filtered_data ORDER BY value;\n    '}

    async def call_tool(
        self,
        name: str,
        arguments: dict[str, Any] | None = None,
    ) -> list[
        mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource
    ]:
        """Call a tool on the server.
    
        Unlike call_tool_mcp, this method raises a ClientError if the tool call results in an error.
    
        Args:
            name (str): The name of the tool to call.
            arguments (dict[str, Any] | None, optional): Arguments to pass to the tool. Defaults to None.
    
        Returns:
            list[mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource]:
                The content returned by the tool.
    
        Raises:
            ClientError: If the tool call results in an error.
            RuntimeError: If called while the client is not connected.
        """
        result = await self.call_tool_mcp(name=name, arguments=arguments or {})
        if result.isError:
            msg = cast(mcp.types.TextContent, result.content[0]).text
>           raise ClientError(msg)
E           fastmcp.exceptions.ClientError: Error executing tool execute_sql: Could not execute SQL query: pool is closing

.venv/lib/python3.10/site-packages/fastmcp/client/client.py:426: ClientError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
________________________ test_execute_sql_explain_query ________________________

mcp_client = <fastmcp.client.client.Client object at 0x1061c5d20>

    @pytest.mark.asyncio
    async def test_execute_sql_explain_query(mcp_client: Client):
        """Tests executing an EXPLAIN query."""
        sql = "EXPLAIN SELECT id, name FROM mcp_test_table WHERE name = 'alpha';"
        try:
>           result = await mcp_client.call_tool("execute_sql", {"sql_query": sql})

tests/mcp/postgres/test_server.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <fastmcp.client.client.Client object at 0x1061c5d20>
name = 'execute_sql'
arguments = {'sql_query': "EXPLAIN SELECT id, name FROM mcp_test_table WHERE name = 'alpha';"}

    async def call_tool(
        self,
        name: str,
        arguments: dict[str, Any] | None = None,
    ) -> list[
        mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource
    ]:
        """Call a tool on the server.
    
        Unlike call_tool_mcp, this method raises a ClientError if the tool call results in an error.
    
        Args:
            name (str): The name of the tool to call.
            arguments (dict[str, Any] | None, optional): Arguments to pass to the tool. Defaults to None.
    
        Returns:
            list[mcp.types.TextContent | mcp.types.ImageContent | mcp.types.EmbeddedResource]:
                The content returned by the tool.
    
        Raises:
            ClientError: If the tool call results in an error.
            RuntimeError: If called while the client is not connected.
        """
        result = await self.call_tool_mcp(name=name, arguments=arguments or {})
        if result.isError:
            msg = cast(mcp.types.TextContent, result.content[0]).text
>           raise ClientError(msg)
E           fastmcp.exceptions.ClientError: Error executing tool execute_sql: Could not execute SQL query: pool is closing

.venv/lib/python3.10/site-packages/fastmcp/client/client.py:426: ClientError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
________________________ test_execute_sql_syntax_error _________________________

mcp_client = <fastmcp.client.client.Client object at 0x1063d5e40>

    @pytest.mark.asyncio
    async def test_execute_sql_syntax_error(mcp_client: Client):
        """Tests database syntax errors are reported."""
        sql = "SELECT id, name FROM mcp_test_table WHERE non_existent_column = 1;"
        with pytest.raises(ClientError) as exc_info:
            # This should pass the initial validation but fail at the DB level
            await mcp_client.call_tool("execute_sql", {"sql_query": sql})
    
        # Check that a database-related error was raised
>       assert "database error" in str(exc_info.value).lower()
E       AssertionError: assert 'database error' in 'error executing tool execute_sql: could not execute sql query: pool is closing'
E        +  where 'error executing tool execute_sql: could not execute sql query: pool is closing' = <built-in method lower of str object at 0x1062f6430>()
E        +    where <built-in method lower of str object at 0x1062f6430> = 'Error executing tool execute_sql: Could not execute SQL query: pool is closing'.lower
E        +      where 'Error executing tool execute_sql: Could not execute SQL query: pool is closing' = str(ClientError('Error executing tool execute_sql: Could not execute SQL query: pool is closing'))
E        +        where ClientError('Error executing tool execute_sql: Could not execute SQL query: pool is closing') = <ExceptionInfo ClientError('Error executing tool execute_sql: Could not execute SQL query: pool is closing') tblen=2>.value

tests/mcp/postgres/test_server.py:249: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    src.tools.postgres_mcp.db:db.py:116 Unexpected error executing query: pool is closing
Traceback (most recent call last):
  File "/Users/edkim/dev/confidentialmind-mcp-agent/src/tools/postgres_mcp/db.py", line 105, in execute_readonly_query
    async with pool.acquire() as conn:
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 1024, in __aenter__
    self.connection = await self.pool._acquire(self.timeout)
  File "/Users/edkim/dev/confidentialmind-mcp-agent/.venv/lib/python3.10/site-packages/asyncpg/pool.py", line 860, in _acquire
    raise exceptions.InterfaceError('pool is closing')
asyncpg.exceptions._base.InterfaceError: pool is closing
ERROR    src.tools.postgres_mcp.server:server.py:95 Failed to execute SQL query: pool is closing
=========================== short test summary info ============================
FAILED tests/mcp/postgres/test_server.py::test_get_schemas_resource - mcp.sha...
FAILED tests/mcp/postgres/test_server.py::test_execute_sql_select_success - f...
FAILED tests/mcp/postgres/test_server.py::test_execute_sql_select_with_clause
FAILED tests/mcp/postgres/test_server.py::test_execute_sql_explain_query - fa...
FAILED tests/mcp/postgres/test_server.py::test_execute_sql_syntax_error - Ass...
ERROR tests/mcp/postgres/test_server.py::test_get_schemas_resource - RuntimeE...
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_select_success - Ru...
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_select_with_clause
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_explain_query - Run...
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[INSERT INTO mcp_test_table (name, value) VALUES ('delta', 40);]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[UPDATE mcp_test_table SET value = 25 WHERE name = 'beta';]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[DELETE FROM mcp_test_table WHERE name = 'alpha';]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[CREATE TABLE another_table (col1 TEXT);]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[DROP TABLE mcp_test_table;]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[ALTER TABLE mcp_test_table ADD COLUMN new_col TEXT;]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[SELECT id FROM mcp_test_table; DROP TABLE mcp_test_table;]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_disallowed_keywords[WITH sneaky AS (DELETE FROM mcp_test_table WHERE id = 1) SELECT 1;]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_invalid_start[ ALTER TABLE mcp_test_table RENAME COLUMN value TO amount;]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_invalid_start[COMMENT ON TABLE mcp_test_table IS 'Test table.';]
ERROR tests/mcp/postgres/test_server.py::test_execute_sql_syntax_error - Runt...
=================== 5 failed, 10 passed, 15 errors in 0.79s ====================
